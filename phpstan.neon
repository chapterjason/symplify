includes:
    - packages/phpstan-extensions/config/config.neon
    - packages/phpstan-rules/config/symplify-rules.neon
    # for cognitive rules
    - packages/phpstan-rules/packages/cognitive-complexity/config/cognitive-complexity-services.neon

services:
    -
        class: Symplify\PHPStanRules\Rules\IfImplementsInterfaceThenNewTypeRule
        tags: [phpstan.rules.rule]
        arguments:
            newTypesByInterface:
                Symplify\RuleDocGenerator\Contract\ConfigurableRuleInterface: Symplify\RuleDocGenerator\ValueObject\CodeSample\ConfiguredCodeSample

    -
        class: Symplify\PHPStanRules\Rules\IfNewTypeThenImplementInterfaceRule
        tags: [phpstan.rules.rule]
        arguments:
            interfacesByNewTypes:
                Symplify\RuleDocGenerator\ValueObject\CodeSample\ConfiguredCodeSample: Symplify\RuleDocGenerator\Contract\ConfigurableRuleInterface

    # cognitive complexity
    -
        class: Symplify\PHPStanRules\CognitiveComplexity\Rules\FunctionLikeCognitiveComplexityRule
        tags: [phpstan.rules.rule]
        arguments:
            maxMethodCognitiveComplexity: 8

    -
        class: Symplify\PHPStanRules\CognitiveComplexity\Rules\ClassLikeCognitiveComplexityRule
        tags: [phpstan.rules.rule]
        arguments:
            maxClassCognitiveComplexity: 25
            limitsByTypes:
                PHPStan\Rules\Rule: 16
                Symplify\CodingStandard\Fixer\AbstractSymplifyFixer: 16

    -
        class: Symplify\PHPStanRules\Rules\RequireClassTypeInClassMethodByTypeRule
        tags: [phpstan.rules.rule]
        arguments:
            requiredTypeInMethodByClass:
                Symplify\PHPStanRules\Contract\ManyNodeRuleInterface:
                    getNodeTypes: 'PhpParser\Node'

parameters:
    level: max
    checkGenericClassInNonGenericObjectType: false
    reportUnmatchedIgnoredErrors: false

    parallel:
        # to prevent full thread lagging pc
        maximumNumberOfProcesses: 7

    paths:
        - packages
        - ecs.php
        - rector.php

    excludes_analyse:
        # there is some bug
        - packages/package-builder/src/Testing/AbstractKernelTestCase.php
        - packages/package-builder/src/Console/Command/AbstractSymplifyCommand.php
        # functions false positive
        - *packages/**/tests/**/config.php
        - *packages/**/tests/**-config.php
        - *packages/monorepo-builder/packages/init/templates/*
        - *packages/coding-standard/tests/**/correct*
        - *packages/coding-standard/tests/**/wrong*
        - *packages/coding-standard/tests/**/Wrong*
        - *packages/phpstan-extensions/**/Source/**
        # tests
        - packages/easy-coding-standard/packages/sniff-runner/tests/Application/FileProcessorSource/ReferenceUsedNamesOnlySniff/
        # 3rd party
        - packages/easy-coding-standard/packages/sniff-runner/src/ValueObject/File.php
        - packages/package-builder/src/Yaml/ParametersMerger.php

        # tests
        - packages/phpstan-extensions/tests/Rules/ClassMethod/Source/*

        # requires PHP 7.4
        - 'packages/easy-hydrator/tests/Fixture/TypedProperty.php'
        - 'packages/easy-hydrator/tests/TypedPropertiesTest.php'
        - '*/Source/*'
        - '*/Fixture/*'
        - */vendor/*
        - */stubs/*
        - packages/vendor-patches/tests/Finder/VendorFilesFinderSource/Vendor/some/package/src/PackageClass.php
        - packages/phpstan-rules/tests/Rules/AllowedExclusiveDependencyRule/FixturePhp74/*

    bootstrapFiles:
        - tests/bootstrap.php
#        - packages/easy-coding-standard/packages/changed-files-detector/tests/ChangedFilesDetectorSource/OneClass.php
#        - packages/easy-coding-standard/tests/Finder/SourceFinderSource/Source/SomeClass.php

    ignoreErrors:
        # command argument value type conversion - known string
        -
            message: '#Cannot cast array<string>\|string\|null to string#'
            path: '*packages/*Command.php'

        # invalid 3rd party-code
        - '#Parameter \#1 \$index of method PhpCsFixer\\Tokenizer\\Tokens::getNextTokenOfKind\(\) expects int, int\|null given#'

        # required for autowiring, since only interface is autowired
        - '#Call to an undefined method Symfony\\Component\\DependencyInjection\\ContainerInterface::getParameterBag\(\)#'

        # intersect/union buggy
        - '#expects Symfony\\Component\\DependencyInjection\\ContainerBuilder, Symfony\\Component\\DependencyInjection\\ContainerInterface given#'

        # phpstan 0.10 news
        - '#Parameter \#1 \$path of function dirname expects string, string\|false given#'

        # Symfony 4.2 typehint BC-break
        - '#Parameter \#1 \$command of class Symfony\\Component\\Process\\Process constructor expects array, array<string>\|string given#'

        # false positive
        - '#Cannot assign offset \(int\|string\) to PhpCsFixer\\Tokenizer\\Tokens#'

        # yield iterator
        - '#Parameter \#1 \$files of method Symplify\\SmartFileSystem\\Finder\\FinderSanitizer\:\:sanitize\(\) expects \(iterable<SplFileInfo\|string\>&Nette\\Utils\\Finder\)\|Symfony\\Component\\Finder\\Finder, array<int, SplFileInfo\> given#'
        - '#Call to an undefined method ReflectionType\:\:getName\(\)#'

        # the Filesystem method is only iterable way
        - '#Method Symplify\\PHPStanRules\\CognitiveComplexity\\Tests\\AstCognitiveComplexityAnalyzer\\AstCognitiveComplexityAnalyzerTest\:\:parseFileToFistFunctionLike\(\) should return (.*?) but returns PhpParser\\Node\|null#'

        - '#Method Symplify\\ChangelogLinker\\Github\\GithubRepositoryFromRemoteResolver\:\:resolveFromUrl\(\) should return string but return statement is missing#'
        - '#Parameter \#1 \$path of function pathinfo expects string, string\|false\|null given#'

        - '#Access to an undefined property PhpParser\\Node\\Expr\\Error(.*?)#'

        - '#Cannot call method (.*?) on PhpCsFixer\\Tokenizer\\Token\|null#'

        - '#Cannot call method getSetFileInfo\(\) on Symplify\\SetConfigResolver\\ValueObject\\Set\|null#'
        - '#Cannot call method getRealPath\(\) on Symplify\\SmartFileSystem\\SmartFileInfo\|null#'
        - '#Parameter \#1 \$endPath of method Symfony\\Component\\Filesystem\\Filesystem\:\:makePathRelative\(\) expects string, string\|false given#'

        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            paths:
                # yaml
                - packages/sniffer-fixer-to-ecs-converter/src/FixerToECSConverter.php

                - packages/phpstan-php-config/src/CaseConverter/ServicesConverter.php
                - packages/php-config-printer/src/Printer/SmartPhpConfigPrinter.php
                # php scoper config array
                - */scoper.inc.php
                # Symfony API
                - packages/rule-doc-generator/src/RuleCodeSamplePrinter/PHPStanRuleCodeSamplePrinter.php # 71
                - packages/vendor-patches/src/Composer/ComposerPatchesConfigurationUpdater.php
                - packages/easy-testing/src/MissplacedSkipPrefixResolver.php #23

        -
            message: '#Use value object over return of values#'
            paths:
                # php scoper config array
                - */scoper.inc.php

                # Symfony API
                - packages/easy-coding-standard/src/Console/Output/JsonOutputFormatter.php
                - packages/config-transformer/src/Configuration/Configuration.php

        -
             message: '#Instead of "SplFileInfo" class/interface use "Symplify\\SmartFileSystem\\SmartFileInfo"#'
             paths:
                 - packages/smart-file-system/src/Finder/FinderSanitizer.php
                 - packages/smart-file-system/tests/Finder/FinderSanitizer/FinderSanitizerTest.php

        -
            message: '#Do not use static property#'
            paths:
                - packages/easy-testing/src/StaticFixtureSplitter.php # 19
                - packages/easy-coding-standard-tester/src/Testing/AbstractCheckerTestCase.php # 268

        - '#Method Symplify(.*?)provide(.*?) return type has no value type specified in iterable type Iterator#'

        -
            message: '#Do not use trait#'
            paths:
                - packages/easy-testing/src/PHPUnit/Behavior/DirectoryAssertableTrait.php # 18

        -
            message: '#Do not use setter on a service#'
            paths:
                - packages/easy-coding-standard/packages/configuration/src/Configuration.php # 146
                - packages/git-wrapper/src/GitWorkingCopy.php

        -
            message: '#Do not call parent method if parent method is empty#'
            paths:
                - packages/smart-file-system/src/SmartFileInfo.php # 122

        -
           message: '#Use explicit return value over magic &reference#'
           paths:
               - packages/package-builder/src/Reflection/PrivatesCaller.php # 40

        -
            message: '#Instead of container injection, use specific service#'
            paths:
                 - packages/package-builder/src/Parameter/ParameterProvider.php # 26
                 - packages/symfony-static-dumper/src/HttpFoundation/ControllerContentResolver.php # 37

        - '#The path "/another\-one\.php" was not found#'

        -
            message: '#Do not use factory/method call in constructor\. Put factory in config and get service with dependency injection#'
            paths:
                - packages/easy-coding-standard/src/Set/EasyCodingStandardSetProvider.php # 23
                - packages/set-config-resolver/src/Bootstrap/InvalidSetReporter.php # 22
                - packages/package-builder/src/Parameter/ParameterProvider.php # 26
                - packages/phpstan-rules/src/Rules/CheckClassNamespaceFollowPsr4Rule.php #31

        # solve later
        - '#Constant string value need to only have small letters, _, \-, \. and numbers#'
        # use rector rule for this
        - '#Use decoupled factory service to create "Symplify\\EasyTesting\\ValueObject\\InputAndExpected" object#'

        - '#"@file_get_contents\(\$filename\)" is forbidden to use#'

        -
            message: '#Nested foreach with empty statement is not allowed#'
            paths:
                # xml nesting
                - packages/sniffer-fixer-to-ecs-converter/src/SnifferToECSConverter.php

        # child type
        - '#Parameter \#1 \$node of method Symplify\\PHPStanRules\\Rules\\ForbiddenSpreadOperatorRule\:\:hasVariadicParam\(\) expects PhpParser\\Node\\Expr\\ArrowFunction\|PhpParser\\Node\\Expr\\Closure\|PhpParser\\Node\\Stmt\\ClassMethod\|PhpParser\\Node\\Stmt\\Function_, PhpParser\\Node\\Expr\\ArrowFunction\|PhpParser\\Node\\Expr\\Closure\|\(PhpParser\\Node\\Expr\\FuncCall&PhpParser\\Node\\FunctionLike\)\|\(PhpParser\\Node\\Expr\\MethodCall&PhpParser\\Node\\FunctionLike\)\|\(PhpParser\\Node\\Expr\\StaticCall&PhpParser\\Node\\FunctionLike\)\|PhpParser\\Node\\Stmt\\ClassMethod\|PhpParser\\Node\\Stmt\\Function_ given#'


        -
            message: '#SymfonyStyle service is not needed for only newline and text echo\. Use PHP_EOL and concatenation instead#'
            paths:
                - packages/console-color-diff/src/Console/Output/ConsoleDiffer.php # 11
                - packages/easy-coding-standard/src/Console/Output/JsonOutputFormatter.php # 18

        -
            message: '#Cannot cast array<string\>\|bool\|string\|null to string#'
            paths:
                - packages/easy-coding-standard/packages/configuration/src/Configuration.php # 214
                - packages/monorepo-builder/packages/release/src/Configuration/StageResolver.php # 26
                - packages/phpstan-php-config/src/Command/ConvertCommand.php # 70
                - packages/rule-doc-generator/src/Command/GenerateCommand.php # 54

        -
            message: '#Use another value object over array with string\-keys and objects, array<string, ValueObject\>#'
            paths:
                - packages/easy-ci/src/Latte/LatteFilterManager.php # 88
                - packages/easy-testing/src/PHPUnit/Behavior/DirectoryAssertableTrait.php # 91

        # nesting
        - '#Parameter \#1 \$items of class PhpParser\\Node\\Expr\\Array_ constructor expects array<PhpParser\\Node\\Expr\\ArrayItem\|null\>, array<PhpParser\\Node\\Arg\> given#'

        -
            message: '#Instead of "SplFileInfo" class/interface use "Symplify\\SmartFileSystem\\SmartFileInfo"#'
            path: packages/easy-ci/src/Finder/SrcTestsDirectoriesFinder.php

        - '#Parameter \#1 \$type of method PhpParser\\Builder\\FunctionLike\:\:setReturnType\(\) expects PhpParser\\Node\\Name\|PhpParser\\Node\\NullableType\|string, PhpParser\\Node\\Identifier\|PhpParser\\Node\\Name\|PhpParser\\Node\\NullableType\|PhpParser\\Node\\UnionType given#'
        - '#Cannot cast array<string\>\|bool\|string\|null to string#'

        -
            message: '#Cannot cast array<string\>\|bool\|string\|null to string#'
            path: 'packages/psr4-switcher/src/Configuration/Psr4SwitcherConfiguration.php'

        - '#Parameter \#5 \$default of method Symfony\\Component\\Console\\Command\\Command\:\:addOption\(\) expects array<string\>\|bool\|int\|string\|null, float given#'

        # skipped tests
        - '#Method Symplify\\Skipper\\SkipCriteriaResolver\\SkippedClassAndCodesResolver\:\:resolve\(\) should return array<string, array<string\>\|null\> but returns array<int\|string, mixed\>#'

        -
            message: '#Array destruct is not allowed\. Use value object to pass data instead#'
            path: 'packages/smart-file-system/src/Normalizer/PathNormalizer.php'

        - '#Parameter (.*?) class ReflectionClass constructor expects class\-string<T of object\>\|T of object, string given#'

        -
            message: '#"%s" in sprintf\(\) format must be quoted#'
            paths:
                - packages/latte-to-twig-converter/src/CaseConverter/LoopsCaseConverter.php

        -
            message: '#Function "method_exists\(\)" cannot be used/left in the code#'
            paths:
                - packages/monorepo-builder/packages/release/src/Process/ProcessRunner.php
                # PHPUnit 9/10 compat
                - packages/symfony-static-dumper/tests/FileSystem/AssetsCopierTest.php
                # existing method call validator
                - packages/easy-ci/src/Latte/Analyzer/MissingClassStaticCallLatteAnalyzer.php
                # look for parent method
                - packages/phpstan-rules/src/Rules/PreventParentMethodVisibilityOverrideRule.php
                # PHP 7/8 compact
                - packages/easy-hydrator/src/ParameterTypeRecognizer.php

        -
            message: '#Function "property_exists\(\)" cannot be used/left in the code#'
            paths:
                - packages/astral/src/NodeNameResolver/ClassLikeNodeNameResolver.php
                # PHP compat
                - packages/package-builder/src/Reflection/PrivatesAccessor.php

        -
            message: '#Anonymous class is not allowed#'
            paths:
                 - packages/astral/src/NodeTraverser/SimpleCallableNodeTraverser.php #35

        -
            message: '#Use controller class name based on route name instead#'
            paths:
                 - packages/symfony-static-dumper/tests/test_project/src/Controller/OneArgumentController.php #13
                 - packages/symfony-static-dumper/tests/test_project/src/Controller/SomeController.php #13
                 - packages/symfony-static-dumper/tests/test_project/src/Controller/TwoArgumentsController.php #13

        # the file must start with "Abstract" to be correct
        -
            message: '#Skipped tested file must start with "Skip" prefix#'
            paths:
                 - packages/phpstan-rules/tests/Rules/PrefixAbstractClassRule/PrefixAbstractClassRuleTest.php
                 - packages/phpstan-rules/tests/Rules/RequiredAbstractClassKeywordRule/RequiredAbstractClassKeywordRuleTest.php

        -
            message: '#Argument "name" must be a constant#'
            paths:
                - packages/symfony-static-dumper/tests/test_project
                - packages/phpstan-rules/tests/Rules/ForbiddenArrayWithStringKeysRule/FixturePhp80/SkipAttributeArrayKey.php

        - '#Method Symplify\\PHPStanRules\\NodeFinder\\MethodCallNodeFinder\:\:findUsages\(\) should return array<PhpParser\\Node\\Expr\\MethodCall\> but returns array<PhpParser\\Node\>#'

        # manually constructored for Symfony compiler pass, before DI is created
        -
             message: '#Do not use scalar or array as constructor parameter\. Use "Symplify\\PackageBuilder\\Parameter\\ParameterProvider" service instead#'
             paths:
                 - packages/autowire-array-parameter/src/Skipper/ParameterSkipper.php
        - '#Method Symplify\\PHPStanRules\\NodeFinder\\MethodCallNodeFinder\:\:findByName\(\) should return array<PhpParser\\Node\\Expr\\MethodCall\> but returns array<PhpParser\\Node\>#'

        -
            message: '#Assign in loop is not allowed#'
            paths:
                - packages/monorepo-builder/packages/merge/src/Validation/AutoloadPathValidator.php #30

        -
            message: '#\$this as argument is not allowed#'
            paths:
                - packages/easy-hydrator/src/ClassConstructorValuesResolver.php #44

        # required complexity, as get/set methods for API of composer.json
        - '#Cognitive complexity for "Symplify\\ComposerJsonManipulator\\ComposerJsonFactory\:\:createFromArray\(\)" is \d+, keep it under 8#'

        - '#\$this as argument is not allowed\. Refactor method to service composition#'
        - '#Class with base "Regex" name is already used in "MongoDB\\BSON\\Regex", "Symplify\\PHPStanRules\\ValueObject\\Regex"\. Use unique name to make classes easy to recognize#'

        -
            message: '#Class cognitive complexity is \d+, keep it under 25#'
            paths:
                 - packages/coding-standard/src/Php/PhpContentAnalyzer.php
                 - packages/git-wrapper/src/GitWorkingCopy.php

        -
            message: '#Cognitive complexity for "Symplify\\CodingStandard\\Php\\PhpContentAnalyzer\:\:isPhpContent\(\)" is \d+, keep it under 8#'
            path: packages/coding-standard/src/Php/PhpContentAnalyzer.php

        # tests
        - '#Use decoupled factory service to create "Symplify\\GitWrapper\\Tests\\Event\\TestBypassEventSubscriber" object#'
        - '#Use decoupled factory service to create "Symplify\\GitWrapper\\Tests\\EventSubscriber\\Source\\TestEventSubscriber" object#'

        -
            message: '#Do not use scalar or array as constructor parameter\. Use "Symplify\\PackageBuilder\\Parameter\\ParameterProvider" service instead#'
            paths:
                # manually created value objects mostly
                - packages/git-wrapper/src/*

        -
            message: '#Do not use factory/method call in constructor\. Put factory in config and get service with dependency injection#'
            paths:
                # manually created value objects mostly
                - packages/git-wrapper/src/*

        -
            message: '#Method name should be different to its parameter name, in a verb form#'
            paths:
                - packages/git-wrapper/src/GitWrapper.php
                - packages/git-wrapper/src/GitCommand.php

        -
            message: '#Do not use setter on a service#'
            paths:
                # manually created value objects mostly
                - packages/git-wrapper/src/*

        -
            message: '#Spread operator is not allowed#'
            paths:
                - packages/git-wrapper/src

        - '#Method "needsMerge\(\)" returns bool type, so the name should start with is/has/was#'

        -
            message: '#Use value object over multi array assign#'
            paths:
                - packages/git-wrapper/src/GitWorkingCopy.php

        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            paths:
                - packages/git-wrapper/src/GitWorkingCopy.php
                - packages/git-wrapper/src/EventSubscriber/GitLoggerEventSubscriber.php

        -
            message: '#Array with keys is not allowed\. Use value object to pass data instead#'
            paths:
                - packages/git-wrapper/src/GitBranches.php

        -
            message: '#Use explicit names over dynamic ones#'
            paths:
                - packages/git-wrapper/src/EventSubscriber/GitLoggerEventSubscriber.php

        - '#Class with base "Regex" name is already used in "Symplify\\PHPStanRules\\ValueObject\\Regex", "Symplify\\GitWrapper\\ValueObject\\Regex"\. Use unique name to make classes easy to recognize#'

        # third party package
        -
             message: '#Parameter "(.*?)" cannot be nullable#'
             paths:
                 - packages/git-wrapper/src
                 - packages/git-wrapper/tests


        # needed to use the abstract test case features
        -
             message: '#Inheritance from "PHPStan\\Testing\\RuleTestCase" class is forbidden\. Use "Symplify\\PHPStanExtensions\\Testing\\AbstractServiceAwareRuleTestCase" instead#'
             paths:
                 - packages/phpstan-extensions/src/Testing/AbstractServiceAwareRuleTestCase.php

        - '#Parameter "outputFileInfo" cannot be nullable#'

        # will be resolved soon
        - '#Parameter "mainConfigFileInfo" cannot be nullable#'

        - '#Method Symplify\\PHPStanRules\\Rules\\RequireStringRegexMatchKeyRule\:\:findVariableArrayDimFetches\(\) should return array<PhpParser\\Node\\Expr\\ArrayDimFetch\> but returns array<PhpParser\\Node\>#'
        - '#Method Symplify\\Astral\\NodeFinder\\ParentNodeFinder\:\:findFirstParentByType\(\) should return T of PhpParser\\Node\|null but returns class\-string<T of PhpParser\\Node\>\|T of PhpParser\\Node#'
        - '#Property Symplify\\PHPStanRules\\Rules\\NoInheritanceRule\:\:\$allowedParentTypes \(array<class\-string\>\) does not accept array<string\>#'

        -
            message: '#Do not inherit from abstract class, better use composition#'
            paths:
                - packages/git-wrapper/src
                - packages/set-config-resolver/src/ConfigResolver.php
                - packages/set-config-resolver/src/SetAwareConfigResolver.php
                - packages/symfony-static-dumper/tests/test_project

        # needed as `humbug/php-scoper` provides `Isolated\Symfony\Component\Finder\Finder`
        -
            message: '#Call to static method create\(\) on an unknown class Isolated\\Symfony\\Component\\Finder\\Finder#'
            paths:
                - packages/easy-coding-standard/scoper.inc.php

        - '#Method Symplify\\EasyCI\\ContentAnalyzer\\ClassExtractor\:\:extractClassName\(\) should return class\-string but returns string#'
        - '#Use decoupled factory service to create "Symfony\\Component\\HttpKernel\\KernelInterface" object#'

        # some phpstan bug
        - '#(Method|Property) (.*?) iterable type Symfony\\Component\\Process\\Process#'

        - '#Method Symplify\\EasyTesting\\DataProvider\\StaticFixtureFinder\:\:yieldDirectoryExclusively\(\) should return Iterator<mixed, Symplify\\SmartFileSystem\\SmartFileInfo\> but returns Iterator<mixed, array<int, Symplify\\SmartFileSystem\\SmartFileInfo\>\>#'

        -
            message: '#Do not use scalar or array as constructor parameter\. Use "Symplify\\PackageBuilder\\Parameter\\ParameterProvider" service instead#'
            paths:
                - packages/smart-file-system/src/SmartFileInfo.php

        # xml magic
        - '#Offset (.*?) does not exist on SimpleXMLElement\|null#'
        -
            message: '#Unreachable statement \- code above always terminates#'
            paths:
                - packages/easy-coding-standard/bin/ecs.php
                - packages/changelog-linker/tests/ChangeTree/ChangeFactory/*
                - packages/changelog-linker/tests/ChangelogDumper/*

        # resolve later
        - '#Method (.*?) with no value type specified in iterable type array#'
        # resolve first
        - '#Method (.*?) has parameter (.*?) with no typehint specified#'

        # wrong keys
        - '#Generator expects value type array<array<int\|string\>\|string\>, array<int, array<int, array<int, int\|string\>\>\|string\> given#'
        -
            message: '#Generator expects value type (.*?), array<int, array<int, array<int, int\|string\>\>\|string\> given#'
            paths:
                -  packages/phpstan-rules/tests/Rules

        - '#Do not use factory/method call in constructor\. Put factory in config and get service with dependency injection#'

        -
             message: '#Do not compare call directly, use a variable assign#'
             paths:
                 - packages/easy-ci/src/Git/ConflictResolver.php

        # known types
        - '#Method Symplify\\Astral\\NodeFinder\\SimpleNodeFinder\:\:findByType\(\) should return array<T of PhpParser\\Node\> but returns array<PhpParser\\Node\>#'
        - '#Method Symplify\\Astral\\NodeFinder\\SimpleNodeFinder\:\:findFirstParentByType\(\) should return T of PhpParser\\Node\|null but returns class\-string<T of PhpParser\\Node\>\|T of PhpParser\\Node#'

        - '#Array \(array<PHPStan\\PhpDocParser\\Ast\\Type\\ArrayShapeItemNode\>\) does not accept PHPStan\\PhpDocParser\\Ast\\Type\\TypeNode#'
        - '#Property Symplify\\PHPStanRules\\ObjectCalisthenics\\Rules\\NoChainMethodCallRule\:\:\$allowedChainTypes \(array<class\-string\>\) does not accept array<string\>#'

        # not found on purpose
        - '#Instantiated class Isolated\\Symfony\\Component\\Finder\\Finder not found#'
        -
            message: '#Do not use chained method calls\. Put each on separated lines#'
            paths:
                - packages/easy-coding-standard/scoper.inc.php
        -
            message: '#Call to method files\(\) on an unknown class Isolated\\Symfony\\Component\\Finder\\Finder#'
            paths:
                - packages/easy-coding-standard/scoper.inc.php

        -
            message: '#Class cognitive complexity is \d+, keep it under 25#'
            paths:
                - packages/composer-json-manipulator/src/ValueObject/ComposerJson.php
